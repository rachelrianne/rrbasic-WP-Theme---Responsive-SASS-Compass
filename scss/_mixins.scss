// Breakpoints
$bp1: 768px;
$bp2: 1280px;
$bp3: 1600px;

@mixin bp($point) {
	@if $point == xl {
    @media screen and (min-width:($bp3)) { @content; }
  }
  @else if $point == lg {
   @media screen and (max-width: $bp3 - 1) { @content; }
  }
  @else if $point == med {
   @media screen and (max-width: $bp2 - 1) { @content; }
  }
  @else if $point == sm {
   @media screen and (max-width: $bp1 - 1) { @content; }
  }
  @else {
  	@media screen and (max-width: $point - 1) { @content; }
  }
}

// Spans
@mixin span($num, $cols) {
	$one_col: 100% / $cols;
  width: ($one_col * $num); 
}

// rem Fallback
@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px : ();
  $rem: ();
  
  @each $value in $values {
   
    @if $value == 0 or $value == auto {
      $px : append($px , $value);
      $rem: append($rem, $value);
    }
    
    @else { 
      $unit: unit($value);   
      $val: parseInt($value);
      
      @if $unit == "px" { 
        $px : append($px,  $value);
        $rem: append($rem, ($val / 10 + rem));
      }
      
      @if $unit == "rem" {
        $px : append($px,  ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }
  
  @if $px == $rem {    
    #{$property}: $px; 
  } @else {
    #{$property}: $px; 
    #{$property}: $rem;
  }
}

// Colors
$grey_opaque: rgba(#222, 0.6);

// Other Variables
$footerH: 80px;